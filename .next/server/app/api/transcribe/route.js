"use strict";(()=>{var e={};e.id=93,e.ids=[93],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},5141:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>f,patchFetch:()=>g,requestAsyncStorage:()=>d,routeModule:()=>c,serverHooks:()=>m,staticGenerationAsyncStorage:()=>l});var a={};t.r(a),t.d(a,{POST:()=>p});var o=t(9303),i=t(8716),n=t(670),s=t(7070),u=t(1258);async function p(e){try{let r=(await e.formData()).get("audio"),t=await r.arrayBuffer();Buffer.from(t).toString("base64");let a=process.env.GEMINI_API_KEY;if(!a)throw Error("GEMINI_API_KEY is not defined");return new u.$D(a).getGenerativeModel({model:"gemini-pro"}),s.NextResponse.json({text:"Audio transcription functionality coming soon!"})}catch(e){return console.error("Error in transcribe route:",e),s.NextResponse.json({error:"Failed to transcribe audio"},{status:500})}}let c=new o.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/transcribe/route",pathname:"/api/transcribe",filename:"route",bundlePath:"app/api/transcribe/route"},resolvedPagePath:"C:\\Users\\aarus\\multi-ai\\app\\api\\transcribe\\route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:d,staticGenerationAsyncStorage:l,serverHooks:m}=c,f="/api/transcribe/route";function g(){return(0,n.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:l})}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),a=r.X(0,[948,434],()=>t(5141));module.exports=a})();